// Copyright (c) Forged WoW LLC <https://github.com/ForgedWoW/ForgedCore>
// Licensed under GPL-3.0 license. See <https://github.com/ForgedWoW/ForgedCore/blob/master/LICENSE> for full information.

using System.Collections.Generic;
using Forged.MapServer.Scripting;
using Forged.MapServer.Scripting.Interfaces;
using Forged.MapServer.Scripting.Interfaces.ISpell;
using Forged.MapServer.Spells;
using Framework.Constants;

namespace Scripts.Spells.Items;

[Script]
internal class SpellItemNighInvulnerability : SpellScript, IHasSpellEffects
{
    public List<ISpellEffect> SpellEffects { get; } = new();


    public override void Register()
    {
        SpellEffects.Add(new EffectHandler(HandleDummy, 0, SpellEffectName.Dummy, SpellScriptHookType.EffectHitTarget));
    }

    private void HandleDummy(int effIndex)
    {
        var caster = Caster;
        var castItem = CastItem;

        if (castItem)
        {
            if (RandomHelper.randChance(86)) // Nigh-Invulnerability   - success
                caster.SpellFactory.CastSpell(caster, ItemSpellIds.NIGH_INVULNERABILITY, new CastSpellExtraArgs(castItem));
            else // Complete Vulnerability - backfire in 14% casts
                caster.SpellFactory.CastSpell(caster, ItemSpellIds.COMPLETE_VULNERABILITY, new CastSpellExtraArgs(castItem));
        }
    }
}